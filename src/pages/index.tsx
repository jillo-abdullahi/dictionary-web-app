import Head from "next/head";
import { useState, useEffect } from "react";
import Image from "next/image";
import { InputField } from "@/components/inputField";
import { Header } from "@/containers/Header";
import { FontType } from "@/containers/Header";

export default function Home() {
  const [isDarkTheme, setIsDarkTheme] = useState(true);
  const [font, setFont] = useState<FontType>(FontType.INTER);
  const [textColor, setTextColor] = useState<"text-white" | "text-black">(
    "text-white"
  );
  const [searchTerm, setSearchTerm] = useState<string>("");
  const [error, setError] = useState<string>("");

  const [backgroundColor, setBackgroundColor] = useState<
    "bg-white" | "bg-black"
  >("bg-black");

  const toggleTheme = () => {
    setIsDarkTheme(!isDarkTheme);
  };

  const toggleFont = (_font: FontType) => {
    if (_font === FontType.INTER) {
      setFont(FontType.INTER);
    } else if (_font === FontType.LORA) {
      setFont(FontType.LORA);
    } else {
      setFont(FontType.INCONSOLATA);
    }
  };

  useEffect(() => {
    if (!isDarkTheme) {
      setTextColor("text-black");
      setBackgroundColor("bg-white");
    } else {
      setTextColor("text-white");
      setBackgroundColor("bg-black");
    }
  }, [isDarkTheme]);

  // need to clear error when searchTerm changes
  useEffect(() => {
    setError("");
  }, [searchTerm]);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (searchTerm.trim() === "") {
      setError("Please enter a word");
    } else {
      setError("");
    }
  };

  return (
    <>
      <Head>
        <title>Dictionary</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/assets/images/logo.svg" />
      </Head>
      <main
        className={`w-full h-screen flex justify-center pt-58 ${backgroundColor} ${textColor} ${font} transition-all duration-500 ease-in-out`}
      >
        <div className="max-w-736 w-full">
          <Header
            theme={isDarkTheme ? "dark" : "light"}
            toggleTheme={toggleTheme}
            font={font}
            toggleFont={toggleFont}
          />

          <div className="w-full mt-14">
            <InputField
              value={searchTerm}
              error={error}
              placeholder="Search for any word..."
              handleChange={(e) => setSearchTerm(e.target.value)}
              handleSubmit={handleSubmit}
              font={font}
              theme={isDarkTheme ? "dark" : "light"}
            />
          </div>

          <div className="mt-12">
            <div className="flex w-full justify-between items-center">
              <div className="flex flex-col space-y-2">
                <h1 className="text-6xl font-bold">Keyboard</h1>
                <span className="text-purple text-2xl">{"/ˈkiːbɔːd/"}</span>
              </div>
              <button>
                <Image
                  src="/assets/images/icon-play.svg"
                  alt="volume"
                  width={75}
                  height={75}
                />
              </button>
            </div>

            <div className="mt-12 w-full">
              <div className="relative flex items-center">
                <span className="mr-5 text-2xl italic font-bold ">noun</span>
                <hr
                  className={`  w-full ${
                    isDarkTheme ? "border-gray-400" : "border-gray-200"
                  }`}
                />
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
